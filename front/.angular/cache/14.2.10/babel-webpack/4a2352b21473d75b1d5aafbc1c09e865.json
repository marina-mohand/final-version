{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class LessonsService {\n  //permettre l echange entre le client et le server via REQ HTTP\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  /* onFileUpload(){\r\n     const imageBlob = this.fileInput.nativeElement.files[0];\r\n     const file= new FormData();\r\n     file.set('file',imageBlob);\r\n     return this.http.post(\"http://localhost:3000/lessons\",file).subscribe(response=>{\r\n       console.log(response);\r\n     });\r\n   }*/\n  //TEACHER\n\n\n  getLessons() {\n    return this.http.get(\"http://localhost:3000/homeTeacher/\" + sessionStorage.getItem('_id'));\n  }\n\n  getLessonsStudent() {\n    return this.http.get(\"http://localhost:3000/homeTeacher/\");\n  } //Etape 2 : on recoit la lesson et on l envoie au server \n\n\n  addLesson(lesson) {\n    //On appel la methode addNote() du notes.component qui appelera l APi de notes\n    //et on place l object a envoyer\n    //Etape 3 : return Observable car on est en mode asynchrone et que l Observable permet d etre notifié en cas de réponse\n    return this.http.post(\"http://localhost:3000/homeTeacher\", lesson);\n  } //Observable<any>\n\n\n  deleteLesson(lessonId) {\n    return this.http.delete(\"http://localhost:3000/homeTeacher/\" + lessonId);\n  }\n\n  saveLesson(lesson, idprof) {\n    lesson.idProf = idprof;\n    this.http.post('http://localhost:3000/homeTeacher', lesson).subscribe(res => {\n      console.log(res);\n    });\n  }\n\n  updateLesson(lesson, id) {\n    lesson._id = id;\n    return this.http.put('http://localhost:3000/edit-lesson/' + id, lesson).subscribe(res => {\n      console.log(res);\n    });\n  }\n\n  getOneLesson(id) {\n    console.log(id);\n    return this.http.get('http://localhost:3000/viewLesson/' + id);\n  }\n\n}\n\nLessonsService.ɵfac = function LessonsService_Factory(t) {\n  return new (t || LessonsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n\nLessonsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LessonsService,\n  factory: LessonsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,QAAkD,eAAlD;;;;AAUA,OAAM,MAAOC,cAAP,CAAqB;EASzB;EACAC,YAAmBC,IAAnB,EAA4CC,MAA5C,EAAyD;IAAtC;IAAyB;EAAgB;EAE7D;;;;;;;;EASC;;;EAEAC,UAAU;IACR,OAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,uCAAqCC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAnD,CAAP;EACD;;EACDC,iBAAiB;IACf,OAAO,KAAKN,IAAL,CAAUG,GAAV,CAAc,oCAAd,CAAP;EACD,CA5BwB,CA8BvB;;;EACAI,SAAS,CAACC,MAAD,EAAY;IAClB;IACC;IACA;IACA,OAAO,KAAKR,IAAL,CAAUS,IAAV,CAAe,mCAAf,EAAmDD,MAAnD,CAAP;EACD,CApCoB,CAuCrB;;;EACFE,YAAY,CAACC,QAAD,EAAgB;IAC1B,OAAO,KAAKX,IAAL,CAAUY,MAAV,CAAiB,uCAAqCD,QAAtD,CAAP;EACD;;EAGHE,UAAU,CAACL,MAAD,EAAuBM,MAAvB,EAAoC;IAC5CN,MAAM,CAACO,MAAP,GAAgBD,MAAhB;IACA,KAAKd,IAAL,CAAUS,IAAV,CAAe,mCAAf,EAAoDD,MAApD,EAA4DQ,SAA5D,CAAsEC,GAAG,IAAG;MAC1EC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAFD;EAGD;;EAEDG,YAAY,CAACZ,MAAD,EAAwBa,EAAxB,EAAiC;IAC3Cb,MAAM,CAACc,GAAP,GAAWD,EAAX;IACA,OAAO,KAAKrB,IAAL,CAAUuB,GAAV,CAAc,uCAAqCF,EAAnD,EAAuDb,MAAvD,EAA+DQ,SAA/D,CAAyEC,GAAG,IAAG;MACpFC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAFM,CAAP;EAGD;;EAEDO,YAAY,CAACH,EAAD,EAAU;IACpBH,OAAO,CAACC,GAAR,CAAYE,EAAZ;IACA,OAAO,KAAKrB,IAAL,CAAUG,GAAV,CAAc,sCAAoCkB,EAAlD,CAAP;EACD;;AA9DwB;;;mBAAdvB,gBAAc2B;AAAA;;;SAAd3B;EAAc4B,SAAd5B,cAAc;EAAA6B,YAFb","names":["ElementRef","LessonsService","constructor","http","router","getLessons","get","sessionStorage","getItem","getLessonsStudent","addLesson","lesson","post","deleteLesson","lessonId","delete","saveLesson","idprof","idProf","subscribe","res","console","log","updateLesson","id","_id","put","getOneLesson","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\mary-\\OneDrive\\Documents\\MIAGE DAUPHINE\\Dauphine S9\\Dev Front Back End\\final-version\\front\\src\\app\\lessons.service.ts"],"sourcesContent":["import { ElementRef, Injectable, ViewChild } from '@angular/core';\r\nimport { TeacherLesson } from './models/teacher-lesson';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LessonsService {\r\n  \r\n\r\n  @ViewChild('fileInput',{static:false}) fileInput! : ElementRef;\r\n\r\n  //Créer le tableau \"lessons\" en local\r\n  lessons!: TeacherLesson[];\r\n  selectedLesson!: TeacherLesson;\r\n\r\n  //permettre l echange entre le client et le server via REQ HTTP\r\n  constructor(public http:HttpClient, private router:Router){}\r\n\r\n /* onFileUpload(){\r\n    const imageBlob = this.fileInput.nativeElement.files[0];\r\n    const file= new FormData();\r\n    file.set('file',imageBlob);\r\n    return this.http.post(\"http://localhost:3000/lessons\",file).subscribe(response=>{\r\n      console.log(response);\r\n    });\r\n  }*/\r\n\r\n  //TEACHER\r\n\r\n  getLessons(){\r\n    return this.http.get(\"http://localhost:3000/homeTeacher/\"+sessionStorage.getItem('_id'));\r\n  }\r\n  getLessonsStudent(){\r\n    return this.http.get(\"http://localhost:3000/homeTeacher/\");\r\n  }\r\n\r\n    //Etape 2 : on recoit la lesson et on l envoie au server \r\n    addLesson(lesson: any):any{\r\n       //On appel la methode addNote() du notes.component qui appelera l APi de notes\r\n        //et on place l object a envoyer\r\n        //Etape 3 : return Observable car on est en mode asynchrone et que l Observable permet d etre notifié en cas de réponse\r\n        return this.http.post(\"http://localhost:3000/homeTeacher\",lesson);\r\n      }\r\n    \r\n\r\n      //Observable<any>\r\n    deleteLesson(lessonId:String){\r\n      return this.http.delete(\"http://localhost:3000/homeTeacher/\"+lessonId ); \r\n    }\r\n\r\n    \r\n  saveLesson(lesson:TeacherLesson, idprof:string){\r\n    lesson.idProf = idprof;\r\n    this.http.post('http://localhost:3000/homeTeacher', lesson).subscribe(res =>{\r\n      console.log(res);\r\n    })\r\n  }\r\n\r\n  updateLesson(lesson: TeacherLesson, id:string) {\r\n    lesson._id=id;\r\n    return this.http.put('http://localhost:3000/edit-lesson/'+id, lesson).subscribe(res =>{\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  getOneLesson(id:String){\r\n    console.log(id);\r\n    return this.http.get('http://localhost:3000/viewLesson/'+id);\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n  //Envoi de l image au Node Server\r\n  //++ : remplace <any> par <Response>\r\n  /*uploadImage(image: File){\r\n    const formData = new FormData();\r\n\r\n    formData.append('image', image);\r\n\r\n    return this.http.post('http://localhost:3000/homeLessonsTeacher/', formData);\r\n  }*/\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}